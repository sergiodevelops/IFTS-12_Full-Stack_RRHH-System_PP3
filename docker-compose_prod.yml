version: '3.2'
services:

  # MYSQL service --> puerto 3306(pc):3306(docker)
  mysql_service:
    container_name: 'mysql_service'
    image: 'mysql:5.7.35'
    volumes:
      - './mysql_service/.mysql-data/db:/var/lib/mysql'
    ports:
      - '3306:3306'
    hostname: 'localhost'
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'rrhh'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'user'
    restart: 'always'

  # API service BACKend --> puerto 4005(pc):4000(docker)
  api_service:
    container_name: 'api_service'
    depends_on:
      - 'mysql_service'
    env_file:
      - 'api_service/.env'
    image: 'node:14'
    volumes:
      - './api_service:/var/www/html'
    working_dir: '/var/www/html/'
    dns:
      - '8.8.8.8'
      - '8.8.4.4'
    ports:
      - '4005:4005'
    tty: true
    command: 'bash -c "yarn && yarn start"'
    restart: 'always'

  # WEB service FRONTend --> puerto 3005(pc):3000(docker)
  web_service:
    container_name: 'web_service'
    depends_on:
      - 'api_service'
    env_file:
      - 'web_service/.env'
    image: node:14
    volumes:
      - './web_service:/var/www/html'
    working_dir: /var/www/html/
    dns:
      - '8.8.8.8'
      - '8.8.4.4'
    ports:
      - '3005:3005'
    tty: true
    command: 'bash -c "yarn && yarn start"'
    restart: 'always'

  # MYSQL web adminer --> puerto 8080(pc):8080(docker)
  admindb_service:
    container_name: 'admindb_service'
    depends_on:
      - 'mysql_service'
    image: 'adminer'
    ports:
      - '8080:8080'
    restart: 'always'
