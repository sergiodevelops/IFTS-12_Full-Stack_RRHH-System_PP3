version: '3.2'
# (proxy) + (react) + (express) + (mysql + adminer)

services:
  # DB - MYSQL server
  db_mysql:
    container_name: 'db_mysql'
    build:
      dockerfile: 'Dockerfile'
      context: 'db_mysql'
    cap_add:
      - SYS_NICE
    volumes:
      - "./db_mysql/setup.sql:/docker-entrypoint-initdb.d/setup.sql"
    hostname: 'localhost'
    env_file:
      - 'db_mysql/.env'
    ports:
      - ${REAL_DB_PORT}:${VIRTUAL_DB_PORT}
    restart: 'always'

  # DB - ADMINER client
  db_adminer:
    container_name: 'db_adminer'
    depends_on:
      - 'db_mysql'
    build:
      dockerfile: 'Dockerfile'
      context: 'db_adminer'
    hostname: 'localhost'
    ports:
      - ${REAL_ADMINER_PORT}:${VIRTUAL_ADMINER_PORT}
    restart: 'unless-stopped'

  # UI - REACT JS client
  ui_react:
    container_name: 'ui_react'
    build:
      dockerfile: 'Dockerfile'
      context: 'ui_react'
    volumes:
      - '/app/node_modules'
      - './ui_react:/app'
    dns:
      - '8.8.8.8'
      - '8.8.4.4'
    hostname: 'localhost'
    ports:
      - ${UI_PORT}:${UI_PORT}
    env_file:
      - 'ui_react/.env'
    tty: true
    stdin_open: true
    restart: 'always'

  # API - EXPRESS JS server
  api_express:
    container_name: 'api_express'
    depends_on:
      - 'db_mysql'
    build:
      dockerfile: 'Dockerfile'
      context: 'api_express'
    volumes:
      - '/app/node_modules'
      - './api_express:/app'
    dns:
      - '8.8.8.8'
      - '8.8.4.4'
    hostname: 'localhost'
    ports:
      - ${API_PORT}:${API_PORT}
    env_file:
      - 'api_express/.env'
    tty: true
    restart: 'always'

  # PROXY - NGINX server
  proxy_nginx:
    container_name: 'proxy_nginx'
    depends_on:
      - 'api_express'
      - 'ui_react'
    build:
      dockerfile: 'Dockerfile'
      context: 'proxy_nginx'
    ports:
      - ${REAL_PROXY_PORT}:${HTTP_PORT}
    restart: 'always'
