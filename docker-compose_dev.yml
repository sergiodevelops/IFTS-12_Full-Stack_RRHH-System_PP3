version: '3.2'
services:

  # MYSQL service --> puerto 3306(pc):3306(docker)
  mysql_service_dev:
    container_name: mysql_service_dev
    image: mysql:5.7.35
    volumes:
      - "./mysql_service/.mysql-data/db:/var/lib/mysql"
    ports:
      - "3306:3306"
    hostname: localhost
    environment:
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_DATABASE: 'rrhh'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'user'
    restart: always

  # API service BACKend --> puerto 4005(pc):4005(docker)
  api_service_dev:
    container_name: api_service_dev
    depends_on:
      - mysql_service_dev
    env_file:
      - api_service/.env
    image: node:14
    volumes:
      - "./api_service:/var/www/html"
    working_dir: /var/www/html/
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "4005:4005"
    tty: true
    command: bash -c "yarn && yarn dev"
    restart: always

  # WEB service FRONTend --> puerto 3005(pc):3005(docker)
  web_service_dev:
    container_name: web_service_dev
    depends_on:
      - api_service_dev
    env_file:
      - web_service/.env
    image: node:14
    volumes:
      - "./web_service:/var/www/html"
    working_dir: /var/www/html/
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "3005:3005"
    tty: true
    command: bash -c "yarn && yarn dev"
    restart: always

  # MYSQL web adminer --> puerto 8080(pc):8080(docker)
  admindb_service_dev:
    container_name: admindb_service_dev
    depends_on:
      - mysql_service_dev
    image: adminer
    ports:
      - "8080:8080"
    restart: always
